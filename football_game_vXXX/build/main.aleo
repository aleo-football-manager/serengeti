import puzzle_pieces_v015.aleo;
program football_game_v002.aleo;


















struct GameOutcome:
    goals_home as u64;
    goals_away as u64;

struct Player:
    player_id as u8;
    team_id as u8;
    goalkeeper as boolean;
    attack as u8;
    defense as u8;
    speed as u8;
    power as u8;
    stamina as u8;
    technique as u8;
    goalkeeping as u8;

struct GameResult:
    goals_home as u64;
    goals_away as u64;

record Game:
    owner as address.private;
    challenger_commit as field.private;
    opponent_answer as [Player; 11u32].private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    game_multisig as address.private;
    game_state as field.private;
    ix as u32.private;

record GameReqNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    ix as u32.private;

record WaitingAcceptanceNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    ix as u32.private;

record StakeRenegedNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    renege_address as address.private;
    ix as u32.private;

record ChallengerWagerNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    ix as u32.private;

record OpponentWagerNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    ix as u32.private;

record WaitingRevealNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    ix as u32.private;

record RevealAnswerNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    opponent_answer as [Player; 11u32].private;
    ix as u32.private;

record GameFinishReqNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    challenger_answer as [Player; 11u32].private;
    opponent_answer as [Player; 11u32].private;
    winner as address.private;
    loser as address.private;
    goals_home as u64.private;
    goals_away as u64.private;
    ix as u32.private;

record GameFinishedNotification:
    owner as address.private;
    game_multisig as address.private;
    game_state as field.private;
    your_turn as boolean.private;
    total_pot as u64.private;
    challenger_address as address.private;
    opponent_address as address.private;
    winner as address.private;
    loser as address.private;
    ix as u32.private;

struct Mssage:
    field_1 as field;
    field_2 as field;
    field_3 as field;
    field_4 as field;
    field_5 as field;

record Answer:
    owner as address.private;
    challenger_address as address.private;
    opponent_address as address.private;
    game_multisig as address.private;
    amount as u64.private;
    nonce as field.private;
    answer as [Player; 11u32].private;
    message_1 as field.private;
    message_2 as field.private;
    message_3 as field.private;
    message_4 as field.private;
    message_5 as field.private;
    ix as u32.private;

record AuditMintAnswer:
    owner as address.private;
    answer_owner as address.private;
    challenger_address as address.private;
    opponent_address as address.private;
    game_multisig as address.private;
    amount as u64.private;
    nonce as field.private;
    answer as [Player; 11u32].private;
    message_1 as field.private;
    message_2 as field.private;
    message_3 as field.private;
    message_4 as field.private;
    message_5 as field.private;
    ix as u32.private;

record RevealAnswer:
    owner as address.private;
    challenger_address as address.private;
    opponent_address as address.private;
    game_multisig as address.private;
    amount as u64.private;
    nonce as field.private;
    answer as [Player; 11u32].private;
    sig as signature.private;
    ix as u32.private;

record AuditRevealAnswer:
    owner as address.private;
    challenger_address as address.private;
    opponent_address as address.private;
    game_multisig as address.private;
    amount as u64.private;
    nonce as field.private;
    answer as [Player; 11u32].private;
    sig as signature.private;
    ix as u32.private;

record Key:
    owner as address.private;
    seed as field.private;
    amount as u64.private;
    challenger as address.private;
    opponent as address.private;
    game_multisig as address.private;
    ix as u32.private;

record AuditKey:
    owner as address.private;
    seed as field.private;
    amount as u64.private;
    challenger as address.private;
    opponent as address.private;
    game_multisig as address.private;
    ix as u32.private;


mapping game_outcomes:
	key as u128.public;
	value as GameOutcome.public;

function main:
    input r0 as boolean.private;


function propose_game:
    input r0 as puzzle_pieces_v015.aleo/Piece.record;
    input r1 as u64.private;
    input r2 as address.private;
    input r3 as address.private;
    input r4 as address.private;
    input r5 as address.private;
    input r6 as field.private;
    input r7 as field.private;
    input r8 as field.private;
    input r9 as field.private;
    input r10 as field.private;
    input r11 as signature.private;
    input r12 as field.private;
    input r13 as [Player; 11u32].private;
    input r14 as field.private;
    assert.eq self.caller self.signer;
    assert.neq r5 r4;
    cast r12 into r15 as scalar;
    commit.bhp256 r13 r15 into r16 as field;
    gt r1 0u64 into r17;
    assert.eq r17 true;
    gte r0.amount r1 into r18;
    assert.eq r18 true;
    call puzzle_pieces_v015.aleo/stake_transfer_in r0 r2 r3 r4 r5 r1 r6 r7 r8 r9 r10 r11 into r19 r20 r21 r22 r23;
    cast r4 r14 r1 r3 r4 r5 5u32 into r24 as Key.record;
    cast aleo16hf8hfpwasnn9cf7k2c0dllc56nn7qt547qxgvgwu6pznw4trvqsx68kls r14 r1 r3 r4 r5 6u32 into r25 as AuditKey.record;
    add r1 r1 into r26;
    cast r4 r5 1field true r26 r3 r4 2u32 into r27 as GameReqNotification.record;
    add r1 r1 into r28;
    cast r3 r5 1field false r28 r3 r4 3u32 into r29 as WaitingAcceptanceNotification.record;
    cast 0u8 0u8 false 0u8 0u8 0u8 0u8 0u8 0u8 0u8 into r30 as Player;
    cast r30r30r30r30r30r30r30r30r30r30r30 into r31 as [Player; 11u32];
    add r1 r1 into r32;
    cast r5 r16 r31 r32 r3 r4 r5 1field 1u32 into r33 as Game.record;
    cast r6 r7 r8 r9 r10 into r34 as Mssage;
    sign.verify r11 r3 r34 into r35;
    assert.eq true r35;
    cast r3 r3 r4 r5 r1 r12 r13 r6 r7 r8 r9 r10 1u32 into r36 as Answer.record;
    cast aleo16hf8hfpwasnn9cf7k2c0dllc56nn7qt547qxgvgwu6pznw4trvqsx68kls r3 r3 r4 r5 r1 r12 r13 r6 r7 r8 r9 r10 2u32 into r37 as AuditMintAnswer.record;
    output r19 as puzzle_pieces_v015.aleo/PieceClaim.record;
    output r20 as puzzle_pieces_v015.aleo/PieceStake.record;
    output r21 as puzzle_pieces_v015.aleo/ClaimSignature.record;
    output r22 as puzzle_pieces_v015.aleo/Piece.record;
    output r23 as puzzle_pieces_v015.aleo/AuditStakeIn.record;
    output r36 as Answer.record;
    output r37 as AuditMintAnswer.record;
    output r24 as Key.record;
    output r25 as AuditKey.record;
    output r33 as Game.record;
    output r27 as GameReqNotification.record;
    output r29 as WaitingAcceptanceNotification.record;


function challenger_renege_stake:
    input r0 as WaitingAcceptanceNotification.record;
    input r1 as puzzle_pieces_v015.aleo/PieceStake.record;
    input r2 as puzzle_pieces_v015.aleo/PieceClaim.record;
    input r3 as signature.private;
    assert.eq self.caller self.signer;
    call puzzle_pieces_v015.aleo/stake_transfer_out r1 r2 r3 into r4 r5;
    cast r0.challenger_address r0.game_multisig 0field false r0.total_pot r0.challenger_address r0.opponent_address r0.challenger_address 4u32 into r6 as StakeRenegedNotification.record;
    cast r0.opponent_address r0.game_multisig 0field false r0.total_pot r0.challenger_address r0.opponent_address r0.challenger_address 4u32 into r7 as StakeRenegedNotification.record;
    output r4 as puzzle_pieces_v015.aleo/Piece.record;
    output r5 as puzzle_pieces_v015.aleo/AuditStakeOut.record;
    output r6 as StakeRenegedNotification.record;
    output r7 as StakeRenegedNotification.record;


function submit_wager:
    input r0 as puzzle_pieces_v015.aleo/Piece.record;
    input r1 as Key.record;
    input r2 as GameReqNotification.record;
    input r3 as field.private;
    input r4 as field.private;
    input r5 as field.private;
    input r6 as field.private;
    input r7 as field.private;
    input r8 as signature.private;
    assert.eq self.caller self.signer;
    gt r0.amount 0u64 into r9;
    assert.eq r9 true;
    div r2.total_pot 2u64 into r10;
    gte r0.amount r10 into r11;
    assert.eq r11 true;
    div r2.total_pot 2u64 into r12;
    call puzzle_pieces_v015.aleo/stake_transfer_in r0 r2.opponent_address r2.challenger_address r2.opponent_address r2.game_multisig r12 r3 r4 r5 r6 r7 r8 into r13 r14 r15 r16 r17;
    cast r2.challenger_address r2.game_multisig 2field false r2.total_pot r2.challenger_address r2.opponent_address 5u32 into r18 as ChallengerWagerNotification.record;
    cast r2.opponent_address r2.game_multisig 2field true r2.total_pot r2.challenger_address r2.opponent_address 6u32 into r19 as OpponentWagerNotification.record;
    output r13 as puzzle_pieces_v015.aleo/PieceClaim.record;
    output r14 as puzzle_pieces_v015.aleo/PieceStake.record;
    output r15 as puzzle_pieces_v015.aleo/ClaimSignature.record;
    output r16 as puzzle_pieces_v015.aleo/Piece.record;
    output r17 as puzzle_pieces_v015.aleo/AuditStakeIn.record;
    output r18 as ChallengerWagerNotification.record;
    output r19 as OpponentWagerNotification.record;


function opponent_renege_stake:
    input r0 as WaitingAcceptanceNotification.record;
    input r1 as puzzle_pieces_v015.aleo/PieceStake.record;
    input r2 as puzzle_pieces_v015.aleo/PieceClaim.record;
    input r3 as signature.private;
    assert.eq self.caller self.signer;
    call puzzle_pieces_v015.aleo/stake_transfer_out r1 r2 r3 into r4 r5;
    cast r0.challenger_address r0.game_multisig 0field false r0.total_pot r0.challenger_address r0.opponent_address r0.opponent_address 4u32 into r6 as StakeRenegedNotification.record;
    cast r0.opponent_address r0.game_multisig 0field false r0.total_pot r0.challenger_address r0.opponent_address r0.opponent_address 4u32 into r7 as StakeRenegedNotification.record;
    output r4 as puzzle_pieces_v015.aleo/Piece.record;
    output r5 as puzzle_pieces_v015.aleo/AuditStakeOut.record;
    output r6 as StakeRenegedNotification.record;
    output r7 as StakeRenegedNotification.record;


function accept_game:
    input r0 as Game.record;
    input r1 as [Player; 11u32].private;
    input r2 as puzzle_pieces_v015.aleo/PieceStake.record;
    input r3 as puzzle_pieces_v015.aleo/PieceClaim.record;
    input r4 as puzzle_pieces_v015.aleo/PieceStake.record;
    input r5 as puzzle_pieces_v015.aleo/PieceClaim.record;
    input r6 as u32.private;
    assert.eq r0.owner self.signer;
    assert.eq self.caller self.signer;
    call puzzle_pieces_v015.aleo/transfer_stakes_to_joint r2 r3 r4 r5 r6 into r7 r8 r9 r10;
    cast r0.opponent_address r0.owner 3field false r0.total_pot r0.challenger_address r0.opponent_address 7u32 into r11 as WaitingRevealNotification.record;
    cast r0.challenger_address r0.owner 3field true r0.total_pot r0.challenger_address r0.opponent_address r1 8u32 into r12 as RevealAnswerNotification.record;
    cast r0.owner r0.challenger_commit r1 r0.total_pot r0.challenger_address r0.opponent_address r0.game_multisig 3field 1u32 into r13 as Game.record;
    async accept_game r6 into r14;
    output r7 as puzzle_pieces_v015.aleo/PieceJointStake.record;
    output r8 as puzzle_pieces_v015.aleo/JointPieceTimeClaim.record;
    output r9 as puzzle_pieces_v015.aleo/JointPieceState.record;
    output r10 as puzzle_pieces_v015.aleo/AuditJointStake.record;
    output r11 as WaitingRevealNotification.record;
    output r12 as RevealAnswerNotification.record;
    output r13 as Game.record;
    output r14 as football_game_v002.aleo/accept_game.future;

finalize accept_game:
    input r0 as u32.public;
    sub block.height 1000u32 into r1;
    gte r0 r1 into r2;
    assert.eq r2 true;
    add block.height 1000u32 into r3;
    lte r0 r3 into r4;
    assert.eq r4 true;


function calculate_outcome:
    input r0 as RevealAnswerNotification.record;
    input r1 as Answer.record;
    input r2 as puzzle_pieces_v015.aleo/JointPieceState.record;
    assert.eq r2.state_updater_address self.signer;
    assert.eq self.caller self.signer;
    async calculate_outcome r0.opponent_answer r1.answer into r3;
    output r3 as football_game_v002.aleo/calculate_outcome.future;

finalize calculate_outcome:
    input r0 as [Player; 11u32].public;
    input r1 as [Player; 11u32].public;
    gt r0[1u32].speed r1[1u32].speed into r2;
    ternary r2 r0[1u32].player_id r1[1u32].player_id into r3;
    ternary r2 r0[1u32].team_id r1[1u32].team_id into r4;
    ternary r2 r0[1u32].goalkeeper r1[1u32].goalkeeper into r5;
    ternary r2 r0[1u32].attack r1[1u32].attack into r6;
    ternary r2 r0[1u32].defense r1[1u32].defense into r7;
    ternary r2 r0[1u32].speed r1[1u32].speed into r8;
    ternary r2 r0[1u32].power r1[1u32].power into r9;
    ternary r2 r0[1u32].stamina r1[1u32].stamina into r10;
    ternary r2 r0[1u32].technique r1[1u32].technique into r11;
    ternary r2 r0[1u32].goalkeeping r1[1u32].goalkeeping into r12;
    cast r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 into r13 as Player;
    gt r0[1u32].speed r1[1u32].speed into r14;
    ternary r14 r1[1u32].player_id r0[1u32].player_id into r15;
    ternary r14 r1[1u32].team_id r0[1u32].team_id into r16;
    ternary r14 r1[1u32].goalkeeper r0[1u32].goalkeeper into r17;
    ternary r14 r1[1u32].attack r0[1u32].attack into r18;
    ternary r14 r1[1u32].defense r0[1u32].defense into r19;
    ternary r14 r1[1u32].speed r0[1u32].speed into r20;
    ternary r14 r1[1u32].power r0[1u32].power into r21;
    ternary r14 r1[1u32].stamina r0[1u32].stamina into r22;
    ternary r14 r1[1u32].technique r0[1u32].technique into r23;
    ternary r14 r1[1u32].goalkeeping r0[1u32].goalkeeping into r24;
    cast r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 into r25 as Player;
    gt r0[1u32].speed r1[1u32].speed into r26;
    ternary r26 r1[0u32].player_id r0[0u32].player_id into r27;
    ternary r26 r1[0u32].team_id r0[0u32].team_id into r28;
    ternary r26 r1[0u32].goalkeeper r0[0u32].goalkeeper into r29;
    ternary r26 r1[0u32].attack r0[0u32].attack into r30;
    ternary r26 r1[0u32].defense r0[0u32].defense into r31;
    ternary r26 r1[0u32].speed r0[0u32].speed into r32;
    ternary r26 r1[0u32].power r0[0u32].power into r33;
    ternary r26 r1[0u32].stamina r0[0u32].stamina into r34;
    ternary r26 r1[0u32].technique r0[0u32].technique into r35;
    ternary r26 r1[0u32].goalkeeping r0[0u32].goalkeeping into r36;
    cast r27 r28 r29 r30 r31 r32 r33 r34 r35 r36 into r37 as Player;
    rand.chacha into r38 as u8;
    gt r13.attack r38 into r39;
    rand.chacha into r40 as u8;
    lt r25.defense r40 into r41;
    rand.chacha into r42 as u8;
    lt r37.goalkeeping r42 into r43;
    lt r0[1u32].speed r1[1u32].speed into r44;
    add 0u64 1u64 into r45;
    add 0u64 1u64 into r46;
    ternary r44 r45 0u64 into r47;
    ternary r44 0u64 r46 into r48;
    ternary r43 r47 0u64 into r49;
    ternary r43 r48 0u64 into r50;
    ternary r41 r49 0u64 into r51;
    ternary r41 r50 0u64 into r52;
    ternary r39 r51 0u64 into r53;
    ternary r39 r52 0u64 into r54;
    gt r0[2u32].speed r1[2u32].speed into r55;
    ternary r55 r0[2u32].player_id r1[2u32].player_id into r56;
    ternary r55 r0[2u32].team_id r1[2u32].team_id into r57;
    ternary r55 r0[2u32].goalkeeper r1[2u32].goalkeeper into r58;
    ternary r55 r0[2u32].attack r1[2u32].attack into r59;
    ternary r55 r0[2u32].defense r1[2u32].defense into r60;
    ternary r55 r0[2u32].speed r1[2u32].speed into r61;
    ternary r55 r0[2u32].power r1[2u32].power into r62;
    ternary r55 r0[2u32].stamina r1[2u32].stamina into r63;
    ternary r55 r0[2u32].technique r1[2u32].technique into r64;
    ternary r55 r0[2u32].goalkeeping r1[2u32].goalkeeping into r65;
    cast r56 r57 r58 r59 r60 r61 r62 r63 r64 r65 into r66 as Player;
    gt r0[2u32].speed r1[2u32].speed into r67;
    ternary r67 r1[2u32].player_id r0[2u32].player_id into r68;
    ternary r67 r1[2u32].team_id r0[2u32].team_id into r69;
    ternary r67 r1[2u32].goalkeeper r0[2u32].goalkeeper into r70;
    ternary r67 r1[2u32].attack r0[2u32].attack into r71;
    ternary r67 r1[2u32].defense r0[2u32].defense into r72;
    ternary r67 r1[2u32].speed r0[2u32].speed into r73;
    ternary r67 r1[2u32].power r0[2u32].power into r74;
    ternary r67 r1[2u32].stamina r0[2u32].stamina into r75;
    ternary r67 r1[2u32].technique r0[2u32].technique into r76;
    ternary r67 r1[2u32].goalkeeping r0[2u32].goalkeeping into r77;
    cast r68 r69 r70 r71 r72 r73 r74 r75 r76 r77 into r78 as Player;
    gt r0[2u32].speed r1[2u32].speed into r79;
    ternary r79 r1[0u32].player_id r0[0u32].player_id into r80;
    ternary r79 r1[0u32].team_id r0[0u32].team_id into r81;
    ternary r79 r1[0u32].goalkeeper r0[0u32].goalkeeper into r82;
    ternary r79 r1[0u32].attack r0[0u32].attack into r83;
    ternary r79 r1[0u32].defense r0[0u32].defense into r84;
    ternary r79 r1[0u32].speed r0[0u32].speed into r85;
    ternary r79 r1[0u32].power r0[0u32].power into r86;
    ternary r79 r1[0u32].stamina r0[0u32].stamina into r87;
    ternary r79 r1[0u32].technique r0[0u32].technique into r88;
    ternary r79 r1[0u32].goalkeeping r0[0u32].goalkeeping into r89;
    cast r80 r81 r82 r83 r84 r85 r86 r87 r88 r89 into r90 as Player;
    rand.chacha into r91 as u8;
    gt r66.attack r91 into r92;
    rand.chacha into r93 as u8;
    lt r78.defense r93 into r94;
    rand.chacha into r95 as u8;
    lt r90.goalkeeping r95 into r96;
    lt r0[2u32].speed r1[2u32].speed into r97;
    add r53 1u64 into r98;
    add r54 1u64 into r99;
    ternary r97 r98 r53 into r100;
    ternary r97 r54 r99 into r101;
    ternary r96 r100 r53 into r102;
    ternary r96 r101 r54 into r103;
    ternary r94 r102 r53 into r104;
    ternary r94 r103 r54 into r105;
    ternary r92 r104 r53 into r106;
    ternary r92 r105 r54 into r107;
    gt r0[3u32].speed r1[3u32].speed into r108;
    ternary r108 r0[3u32].player_id r1[3u32].player_id into r109;
    ternary r108 r0[3u32].team_id r1[3u32].team_id into r110;
    ternary r108 r0[3u32].goalkeeper r1[3u32].goalkeeper into r111;
    ternary r108 r0[3u32].attack r1[3u32].attack into r112;
    ternary r108 r0[3u32].defense r1[3u32].defense into r113;
    ternary r108 r0[3u32].speed r1[3u32].speed into r114;
    ternary r108 r0[3u32].power r1[3u32].power into r115;
    ternary r108 r0[3u32].stamina r1[3u32].stamina into r116;
    ternary r108 r0[3u32].technique r1[3u32].technique into r117;
    ternary r108 r0[3u32].goalkeeping r1[3u32].goalkeeping into r118;
    cast r109 r110 r111 r112 r113 r114 r115 r116 r117 r118 into r119 as Player;
    gt r0[3u32].speed r1[3u32].speed into r120;
    ternary r120 r1[3u32].player_id r0[3u32].player_id into r121;
    ternary r120 r1[3u32].team_id r0[3u32].team_id into r122;
    ternary r120 r1[3u32].goalkeeper r0[3u32].goalkeeper into r123;
    ternary r120 r1[3u32].attack r0[3u32].attack into r124;
    ternary r120 r1[3u32].defense r0[3u32].defense into r125;
    ternary r120 r1[3u32].speed r0[3u32].speed into r126;
    ternary r120 r1[3u32].power r0[3u32].power into r127;
    ternary r120 r1[3u32].stamina r0[3u32].stamina into r128;
    ternary r120 r1[3u32].technique r0[3u32].technique into r129;
    ternary r120 r1[3u32].goalkeeping r0[3u32].goalkeeping into r130;
    cast r121 r122 r123 r124 r125 r126 r127 r128 r129 r130 into r131 as Player;
    gt r0[3u32].speed r1[3u32].speed into r132;
    ternary r132 r1[0u32].player_id r0[0u32].player_id into r133;
    ternary r132 r1[0u32].team_id r0[0u32].team_id into r134;
    ternary r132 r1[0u32].goalkeeper r0[0u32].goalkeeper into r135;
    ternary r132 r1[0u32].attack r0[0u32].attack into r136;
    ternary r132 r1[0u32].defense r0[0u32].defense into r137;
    ternary r132 r1[0u32].speed r0[0u32].speed into r138;
    ternary r132 r1[0u32].power r0[0u32].power into r139;
    ternary r132 r1[0u32].stamina r0[0u32].stamina into r140;
    ternary r132 r1[0u32].technique r0[0u32].technique into r141;
    ternary r132 r1[0u32].goalkeeping r0[0u32].goalkeeping into r142;
    cast r133 r134 r135 r136 r137 r138 r139 r140 r141 r142 into r143 as Player;
    rand.chacha into r144 as u8;
    gt r119.attack r144 into r145;
    rand.chacha into r146 as u8;
    lt r131.defense r146 into r147;
    rand.chacha into r148 as u8;
    lt r143.goalkeeping r148 into r149;
    lt r0[3u32].speed r1[3u32].speed into r150;
    add r106 1u64 into r151;
    add r107 1u64 into r152;
    ternary r150 r151 r106 into r153;
    ternary r150 r107 r152 into r154;
    ternary r149 r153 r106 into r155;
    ternary r149 r154 r107 into r156;
    ternary r147 r155 r106 into r157;
    ternary r147 r156 r107 into r158;
    ternary r145 r157 r106 into r159;
    ternary r145 r158 r107 into r160;
    gt r0[4u32].speed r1[4u32].speed into r161;
    ternary r161 r0[4u32].player_id r1[4u32].player_id into r162;
    ternary r161 r0[4u32].team_id r1[4u32].team_id into r163;
    ternary r161 r0[4u32].goalkeeper r1[4u32].goalkeeper into r164;
    ternary r161 r0[4u32].attack r1[4u32].attack into r165;
    ternary r161 r0[4u32].defense r1[4u32].defense into r166;
    ternary r161 r0[4u32].speed r1[4u32].speed into r167;
    ternary r161 r0[4u32].power r1[4u32].power into r168;
    ternary r161 r0[4u32].stamina r1[4u32].stamina into r169;
    ternary r161 r0[4u32].technique r1[4u32].technique into r170;
    ternary r161 r0[4u32].goalkeeping r1[4u32].goalkeeping into r171;
    cast r162 r163 r164 r165 r166 r167 r168 r169 r170 r171 into r172 as Player;
    gt r0[4u32].speed r1[4u32].speed into r173;
    ternary r173 r1[4u32].player_id r0[4u32].player_id into r174;
    ternary r173 r1[4u32].team_id r0[4u32].team_id into r175;
    ternary r173 r1[4u32].goalkeeper r0[4u32].goalkeeper into r176;
    ternary r173 r1[4u32].attack r0[4u32].attack into r177;
    ternary r173 r1[4u32].defense r0[4u32].defense into r178;
    ternary r173 r1[4u32].speed r0[4u32].speed into r179;
    ternary r173 r1[4u32].power r0[4u32].power into r180;
    ternary r173 r1[4u32].stamina r0[4u32].stamina into r181;
    ternary r173 r1[4u32].technique r0[4u32].technique into r182;
    ternary r173 r1[4u32].goalkeeping r0[4u32].goalkeeping into r183;
    cast r174 r175 r176 r177 r178 r179 r180 r181 r182 r183 into r184 as Player;
    gt r0[4u32].speed r1[4u32].speed into r185;
    ternary r185 r1[0u32].player_id r0[0u32].player_id into r186;
    ternary r185 r1[0u32].team_id r0[0u32].team_id into r187;
    ternary r185 r1[0u32].goalkeeper r0[0u32].goalkeeper into r188;
    ternary r185 r1[0u32].attack r0[0u32].attack into r189;
    ternary r185 r1[0u32].defense r0[0u32].defense into r190;
    ternary r185 r1[0u32].speed r0[0u32].speed into r191;
    ternary r185 r1[0u32].power r0[0u32].power into r192;
    ternary r185 r1[0u32].stamina r0[0u32].stamina into r193;
    ternary r185 r1[0u32].technique r0[0u32].technique into r194;
    ternary r185 r1[0u32].goalkeeping r0[0u32].goalkeeping into r195;
    cast r186 r187 r188 r189 r190 r191 r192 r193 r194 r195 into r196 as Player;
    rand.chacha into r197 as u8;
    gt r172.attack r197 into r198;
    rand.chacha into r199 as u8;
    lt r184.defense r199 into r200;
    rand.chacha into r201 as u8;
    lt r196.goalkeeping r201 into r202;
    lt r0[4u32].speed r1[4u32].speed into r203;
    add r159 1u64 into r204;
    add r160 1u64 into r205;
    ternary r203 r204 r159 into r206;
    ternary r203 r160 r205 into r207;
    ternary r202 r206 r159 into r208;
    ternary r202 r207 r160 into r209;
    ternary r200 r208 r159 into r210;
    ternary r200 r209 r160 into r211;
    ternary r198 r210 r159 into r212;
    ternary r198 r211 r160 into r213;
    gt r0[5u32].speed r1[5u32].speed into r214;
    ternary r214 r0[5u32].player_id r1[5u32].player_id into r215;
    ternary r214 r0[5u32].team_id r1[5u32].team_id into r216;
    ternary r214 r0[5u32].goalkeeper r1[5u32].goalkeeper into r217;
    ternary r214 r0[5u32].attack r1[5u32].attack into r218;
    ternary r214 r0[5u32].defense r1[5u32].defense into r219;
    ternary r214 r0[5u32].speed r1[5u32].speed into r220;
    ternary r214 r0[5u32].power r1[5u32].power into r221;
    ternary r214 r0[5u32].stamina r1[5u32].stamina into r222;
    ternary r214 r0[5u32].technique r1[5u32].technique into r223;
    ternary r214 r0[5u32].goalkeeping r1[5u32].goalkeeping into r224;
    cast r215 r216 r217 r218 r219 r220 r221 r222 r223 r224 into r225 as Player;
    gt r0[5u32].speed r1[5u32].speed into r226;
    ternary r226 r1[5u32].player_id r0[5u32].player_id into r227;
    ternary r226 r1[5u32].team_id r0[5u32].team_id into r228;
    ternary r226 r1[5u32].goalkeeper r0[5u32].goalkeeper into r229;
    ternary r226 r1[5u32].attack r0[5u32].attack into r230;
    ternary r226 r1[5u32].defense r0[5u32].defense into r231;
    ternary r226 r1[5u32].speed r0[5u32].speed into r232;
    ternary r226 r1[5u32].power r0[5u32].power into r233;
    ternary r226 r1[5u32].stamina r0[5u32].stamina into r234;
    ternary r226 r1[5u32].technique r0[5u32].technique into r235;
    ternary r226 r1[5u32].goalkeeping r0[5u32].goalkeeping into r236;
    cast r227 r228 r229 r230 r231 r232 r233 r234 r235 r236 into r237 as Player;
    gt r0[5u32].speed r1[5u32].speed into r238;
    ternary r238 r1[0u32].player_id r0[0u32].player_id into r239;
    ternary r238 r1[0u32].team_id r0[0u32].team_id into r240;
    ternary r238 r1[0u32].goalkeeper r0[0u32].goalkeeper into r241;
    ternary r238 r1[0u32].attack r0[0u32].attack into r242;
    ternary r238 r1[0u32].defense r0[0u32].defense into r243;
    ternary r238 r1[0u32].speed r0[0u32].speed into r244;
    ternary r238 r1[0u32].power r0[0u32].power into r245;
    ternary r238 r1[0u32].stamina r0[0u32].stamina into r246;
    ternary r238 r1[0u32].technique r0[0u32].technique into r247;
    ternary r238 r1[0u32].goalkeeping r0[0u32].goalkeeping into r248;
    cast r239 r240 r241 r242 r243 r244 r245 r246 r247 r248 into r249 as Player;
    rand.chacha into r250 as u8;
    gt r225.attack r250 into r251;
    rand.chacha into r252 as u8;
    lt r237.defense r252 into r253;
    rand.chacha into r254 as u8;
    lt r249.goalkeeping r254 into r255;
    lt r0[5u32].speed r1[5u32].speed into r256;
    add r212 1u64 into r257;
    add r213 1u64 into r258;
    ternary r256 r257 r212 into r259;
    ternary r256 r213 r258 into r260;
    ternary r255 r259 r212 into r261;
    ternary r255 r260 r213 into r262;
    ternary r253 r261 r212 into r263;
    ternary r253 r262 r213 into r264;
    ternary r251 r263 r212 into r265;
    ternary r251 r264 r213 into r266;
    gt r0[6u32].speed r1[6u32].speed into r267;
    ternary r267 r0[6u32].player_id r1[6u32].player_id into r268;
    ternary r267 r0[6u32].team_id r1[6u32].team_id into r269;
    ternary r267 r0[6u32].goalkeeper r1[6u32].goalkeeper into r270;
    ternary r267 r0[6u32].attack r1[6u32].attack into r271;
    ternary r267 r0[6u32].defense r1[6u32].defense into r272;
    ternary r267 r0[6u32].speed r1[6u32].speed into r273;
    ternary r267 r0[6u32].power r1[6u32].power into r274;
    ternary r267 r0[6u32].stamina r1[6u32].stamina into r275;
    ternary r267 r0[6u32].technique r1[6u32].technique into r276;
    ternary r267 r0[6u32].goalkeeping r1[6u32].goalkeeping into r277;
    cast r268 r269 r270 r271 r272 r273 r274 r275 r276 r277 into r278 as Player;
    gt r0[6u32].speed r1[6u32].speed into r279;
    ternary r279 r1[6u32].player_id r0[6u32].player_id into r280;
    ternary r279 r1[6u32].team_id r0[6u32].team_id into r281;
    ternary r279 r1[6u32].goalkeeper r0[6u32].goalkeeper into r282;
    ternary r279 r1[6u32].attack r0[6u32].attack into r283;
    ternary r279 r1[6u32].defense r0[6u32].defense into r284;
    ternary r279 r1[6u32].speed r0[6u32].speed into r285;
    ternary r279 r1[6u32].power r0[6u32].power into r286;
    ternary r279 r1[6u32].stamina r0[6u32].stamina into r287;
    ternary r279 r1[6u32].technique r0[6u32].technique into r288;
    ternary r279 r1[6u32].goalkeeping r0[6u32].goalkeeping into r289;
    cast r280 r281 r282 r283 r284 r285 r286 r287 r288 r289 into r290 as Player;
    gt r0[6u32].speed r1[6u32].speed into r291;
    ternary r291 r1[0u32].player_id r0[0u32].player_id into r292;
    ternary r291 r1[0u32].team_id r0[0u32].team_id into r293;
    ternary r291 r1[0u32].goalkeeper r0[0u32].goalkeeper into r294;
    ternary r291 r1[0u32].attack r0[0u32].attack into r295;
    ternary r291 r1[0u32].defense r0[0u32].defense into r296;
    ternary r291 r1[0u32].speed r0[0u32].speed into r297;
    ternary r291 r1[0u32].power r0[0u32].power into r298;
    ternary r291 r1[0u32].stamina r0[0u32].stamina into r299;
    ternary r291 r1[0u32].technique r0[0u32].technique into r300;
    ternary r291 r1[0u32].goalkeeping r0[0u32].goalkeeping into r301;
    cast r292 r293 r294 r295 r296 r297 r298 r299 r300 r301 into r302 as Player;
    rand.chacha into r303 as u8;
    gt r278.attack r303 into r304;
    rand.chacha into r305 as u8;
    lt r290.defense r305 into r306;
    rand.chacha into r307 as u8;
    lt r302.goalkeeping r307 into r308;
    lt r0[6u32].speed r1[6u32].speed into r309;
    add r265 1u64 into r310;
    add r266 1u64 into r311;
    ternary r309 r310 r265 into r312;
    ternary r309 r266 r311 into r313;
    ternary r308 r312 r265 into r314;
    ternary r308 r313 r266 into r315;
    ternary r306 r314 r265 into r316;
    ternary r306 r315 r266 into r317;
    ternary r304 r316 r265 into r318;
    ternary r304 r317 r266 into r319;
    gt r0[7u32].speed r1[7u32].speed into r320;
    ternary r320 r0[7u32].player_id r1[7u32].player_id into r321;
    ternary r320 r0[7u32].team_id r1[7u32].team_id into r322;
    ternary r320 r0[7u32].goalkeeper r1[7u32].goalkeeper into r323;
    ternary r320 r0[7u32].attack r1[7u32].attack into r324;
    ternary r320 r0[7u32].defense r1[7u32].defense into r325;
    ternary r320 r0[7u32].speed r1[7u32].speed into r326;
    ternary r320 r0[7u32].power r1[7u32].power into r327;
    ternary r320 r0[7u32].stamina r1[7u32].stamina into r328;
    ternary r320 r0[7u32].technique r1[7u32].technique into r329;
    ternary r320 r0[7u32].goalkeeping r1[7u32].goalkeeping into r330;
    cast r321 r322 r323 r324 r325 r326 r327 r328 r329 r330 into r331 as Player;
    gt r0[7u32].speed r1[7u32].speed into r332;
    ternary r332 r1[7u32].player_id r0[7u32].player_id into r333;
    ternary r332 r1[7u32].team_id r0[7u32].team_id into r334;
    ternary r332 r1[7u32].goalkeeper r0[7u32].goalkeeper into r335;
    ternary r332 r1[7u32].attack r0[7u32].attack into r336;
    ternary r332 r1[7u32].defense r0[7u32].defense into r337;
    ternary r332 r1[7u32].speed r0[7u32].speed into r338;
    ternary r332 r1[7u32].power r0[7u32].power into r339;
    ternary r332 r1[7u32].stamina r0[7u32].stamina into r340;
    ternary r332 r1[7u32].technique r0[7u32].technique into r341;
    ternary r332 r1[7u32].goalkeeping r0[7u32].goalkeeping into r342;
    cast r333 r334 r335 r336 r337 r338 r339 r340 r341 r342 into r343 as Player;
    gt r0[7u32].speed r1[7u32].speed into r344;
    ternary r344 r1[0u32].player_id r0[0u32].player_id into r345;
    ternary r344 r1[0u32].team_id r0[0u32].team_id into r346;
    ternary r344 r1[0u32].goalkeeper r0[0u32].goalkeeper into r347;
    ternary r344 r1[0u32].attack r0[0u32].attack into r348;
    ternary r344 r1[0u32].defense r0[0u32].defense into r349;
    ternary r344 r1[0u32].speed r0[0u32].speed into r350;
    ternary r344 r1[0u32].power r0[0u32].power into r351;
    ternary r344 r1[0u32].stamina r0[0u32].stamina into r352;
    ternary r344 r1[0u32].technique r0[0u32].technique into r353;
    ternary r344 r1[0u32].goalkeeping r0[0u32].goalkeeping into r354;
    cast r345 r346 r347 r348 r349 r350 r351 r352 r353 r354 into r355 as Player;
    rand.chacha into r356 as u8;
    gt r331.attack r356 into r357;
    rand.chacha into r358 as u8;
    lt r343.defense r358 into r359;
    rand.chacha into r360 as u8;
    lt r355.goalkeeping r360 into r361;
    lt r0[7u32].speed r1[7u32].speed into r362;
    add r318 1u64 into r363;
    add r319 1u64 into r364;
    ternary r362 r363 r318 into r365;
    ternary r362 r319 r364 into r366;
    ternary r361 r365 r318 into r367;
    ternary r361 r366 r319 into r368;
    ternary r359 r367 r318 into r369;
    ternary r359 r368 r319 into r370;
    ternary r357 r369 r318 into r371;
    ternary r357 r370 r319 into r372;
    gt r0[8u32].speed r1[8u32].speed into r373;
    ternary r373 r0[8u32].player_id r1[8u32].player_id into r374;
    ternary r373 r0[8u32].team_id r1[8u32].team_id into r375;
    ternary r373 r0[8u32].goalkeeper r1[8u32].goalkeeper into r376;
    ternary r373 r0[8u32].attack r1[8u32].attack into r377;
    ternary r373 r0[8u32].defense r1[8u32].defense into r378;
    ternary r373 r0[8u32].speed r1[8u32].speed into r379;
    ternary r373 r0[8u32].power r1[8u32].power into r380;
    ternary r373 r0[8u32].stamina r1[8u32].stamina into r381;
    ternary r373 r0[8u32].technique r1[8u32].technique into r382;
    ternary r373 r0[8u32].goalkeeping r1[8u32].goalkeeping into r383;
    cast r374 r375 r376 r377 r378 r379 r380 r381 r382 r383 into r384 as Player;
    gt r0[8u32].speed r1[8u32].speed into r385;
    ternary r385 r1[8u32].player_id r0[8u32].player_id into r386;
    ternary r385 r1[8u32].team_id r0[8u32].team_id into r387;
    ternary r385 r1[8u32].goalkeeper r0[8u32].goalkeeper into r388;
    ternary r385 r1[8u32].attack r0[8u32].attack into r389;
    ternary r385 r1[8u32].defense r0[8u32].defense into r390;
    ternary r385 r1[8u32].speed r0[8u32].speed into r391;
    ternary r385 r1[8u32].power r0[8u32].power into r392;
    ternary r385 r1[8u32].stamina r0[8u32].stamina into r393;
    ternary r385 r1[8u32].technique r0[8u32].technique into r394;
    ternary r385 r1[8u32].goalkeeping r0[8u32].goalkeeping into r395;
    cast r386 r387 r388 r389 r390 r391 r392 r393 r394 r395 into r396 as Player;
    gt r0[8u32].speed r1[8u32].speed into r397;
    ternary r397 r1[0u32].player_id r0[0u32].player_id into r398;
    ternary r397 r1[0u32].team_id r0[0u32].team_id into r399;
    ternary r397 r1[0u32].goalkeeper r0[0u32].goalkeeper into r400;
    ternary r397 r1[0u32].attack r0[0u32].attack into r401;
    ternary r397 r1[0u32].defense r0[0u32].defense into r402;
    ternary r397 r1[0u32].speed r0[0u32].speed into r403;
    ternary r397 r1[0u32].power r0[0u32].power into r404;
    ternary r397 r1[0u32].stamina r0[0u32].stamina into r405;
    ternary r397 r1[0u32].technique r0[0u32].technique into r406;
    ternary r397 r1[0u32].goalkeeping r0[0u32].goalkeeping into r407;
    cast r398 r399 r400 r401 r402 r403 r404 r405 r406 r407 into r408 as Player;
    rand.chacha into r409 as u8;
    gt r384.attack r409 into r410;
    rand.chacha into r411 as u8;
    lt r396.defense r411 into r412;
    rand.chacha into r413 as u8;
    lt r408.goalkeeping r413 into r414;
    lt r0[8u32].speed r1[8u32].speed into r415;
    add r371 1u64 into r416;
    add r372 1u64 into r417;
    ternary r415 r416 r371 into r418;
    ternary r415 r372 r417 into r419;
    ternary r414 r418 r371 into r420;
    ternary r414 r419 r372 into r421;
    ternary r412 r420 r371 into r422;
    ternary r412 r421 r372 into r423;
    ternary r410 r422 r371 into r424;
    ternary r410 r423 r372 into r425;
    gt r0[9u32].speed r1[9u32].speed into r426;
    ternary r426 r0[9u32].player_id r1[9u32].player_id into r427;
    ternary r426 r0[9u32].team_id r1[9u32].team_id into r428;
    ternary r426 r0[9u32].goalkeeper r1[9u32].goalkeeper into r429;
    ternary r426 r0[9u32].attack r1[9u32].attack into r430;
    ternary r426 r0[9u32].defense r1[9u32].defense into r431;
    ternary r426 r0[9u32].speed r1[9u32].speed into r432;
    ternary r426 r0[9u32].power r1[9u32].power into r433;
    ternary r426 r0[9u32].stamina r1[9u32].stamina into r434;
    ternary r426 r0[9u32].technique r1[9u32].technique into r435;
    ternary r426 r0[9u32].goalkeeping r1[9u32].goalkeeping into r436;
    cast r427 r428 r429 r430 r431 r432 r433 r434 r435 r436 into r437 as Player;
    gt r0[9u32].speed r1[9u32].speed into r438;
    ternary r438 r1[9u32].player_id r0[9u32].player_id into r439;
    ternary r438 r1[9u32].team_id r0[9u32].team_id into r440;
    ternary r438 r1[9u32].goalkeeper r0[9u32].goalkeeper into r441;
    ternary r438 r1[9u32].attack r0[9u32].attack into r442;
    ternary r438 r1[9u32].defense r0[9u32].defense into r443;
    ternary r438 r1[9u32].speed r0[9u32].speed into r444;
    ternary r438 r1[9u32].power r0[9u32].power into r445;
    ternary r438 r1[9u32].stamina r0[9u32].stamina into r446;
    ternary r438 r1[9u32].technique r0[9u32].technique into r447;
    ternary r438 r1[9u32].goalkeeping r0[9u32].goalkeeping into r448;
    cast r439 r440 r441 r442 r443 r444 r445 r446 r447 r448 into r449 as Player;
    gt r0[9u32].speed r1[9u32].speed into r450;
    ternary r450 r1[0u32].player_id r0[0u32].player_id into r451;
    ternary r450 r1[0u32].team_id r0[0u32].team_id into r452;
    ternary r450 r1[0u32].goalkeeper r0[0u32].goalkeeper into r453;
    ternary r450 r1[0u32].attack r0[0u32].attack into r454;
    ternary r450 r1[0u32].defense r0[0u32].defense into r455;
    ternary r450 r1[0u32].speed r0[0u32].speed into r456;
    ternary r450 r1[0u32].power r0[0u32].power into r457;
    ternary r450 r1[0u32].stamina r0[0u32].stamina into r458;
    ternary r450 r1[0u32].technique r0[0u32].technique into r459;
    ternary r450 r1[0u32].goalkeeping r0[0u32].goalkeeping into r460;
    cast r451 r452 r453 r454 r455 r456 r457 r458 r459 r460 into r461 as Player;
    rand.chacha into r462 as u8;
    gt r437.attack r462 into r463;
    rand.chacha into r464 as u8;
    lt r449.defense r464 into r465;
    rand.chacha into r466 as u8;
    lt r461.goalkeeping r466 into r467;
    lt r0[9u32].speed r1[9u32].speed into r468;
    add r424 1u64 into r469;
    add r425 1u64 into r470;
    ternary r468 r469 r424 into r471;
    ternary r468 r425 r470 into r472;
    ternary r467 r471 r424 into r473;
    ternary r467 r472 r425 into r474;
    ternary r465 r473 r424 into r475;
    ternary r465 r474 r425 into r476;
    ternary r463 r475 r424 into r477;
    ternary r463 r476 r425 into r478;
    gt r0[10u32].speed r1[10u32].speed into r479;
    ternary r479 r0[10u32].player_id r1[10u32].player_id into r480;
    ternary r479 r0[10u32].team_id r1[10u32].team_id into r481;
    ternary r479 r0[10u32].goalkeeper r1[10u32].goalkeeper into r482;
    ternary r479 r0[10u32].attack r1[10u32].attack into r483;
    ternary r479 r0[10u32].defense r1[10u32].defense into r484;
    ternary r479 r0[10u32].speed r1[10u32].speed into r485;
    ternary r479 r0[10u32].power r1[10u32].power into r486;
    ternary r479 r0[10u32].stamina r1[10u32].stamina into r487;
    ternary r479 r0[10u32].technique r1[10u32].technique into r488;
    ternary r479 r0[10u32].goalkeeping r1[10u32].goalkeeping into r489;
    cast r480 r481 r482 r483 r484 r485 r486 r487 r488 r489 into r490 as Player;
    gt r0[10u32].speed r1[10u32].speed into r491;
    ternary r491 r1[10u32].player_id r0[10u32].player_id into r492;
    ternary r491 r1[10u32].team_id r0[10u32].team_id into r493;
    ternary r491 r1[10u32].goalkeeper r0[10u32].goalkeeper into r494;
    ternary r491 r1[10u32].attack r0[10u32].attack into r495;
    ternary r491 r1[10u32].defense r0[10u32].defense into r496;
    ternary r491 r1[10u32].speed r0[10u32].speed into r497;
    ternary r491 r1[10u32].power r0[10u32].power into r498;
    ternary r491 r1[10u32].stamina r0[10u32].stamina into r499;
    ternary r491 r1[10u32].technique r0[10u32].technique into r500;
    ternary r491 r1[10u32].goalkeeping r0[10u32].goalkeeping into r501;
    cast r492 r493 r494 r495 r496 r497 r498 r499 r500 r501 into r502 as Player;
    gt r0[10u32].speed r1[10u32].speed into r503;
    ternary r503 r1[0u32].player_id r0[0u32].player_id into r504;
    ternary r503 r1[0u32].team_id r0[0u32].team_id into r505;
    ternary r503 r1[0u32].goalkeeper r0[0u32].goalkeeper into r506;
    ternary r503 r1[0u32].attack r0[0u32].attack into r507;
    ternary r503 r1[0u32].defense r0[0u32].defense into r508;
    ternary r503 r1[0u32].speed r0[0u32].speed into r509;
    ternary r503 r1[0u32].power r0[0u32].power into r510;
    ternary r503 r1[0u32].stamina r0[0u32].stamina into r511;
    ternary r503 r1[0u32].technique r0[0u32].technique into r512;
    ternary r503 r1[0u32].goalkeeping r0[0u32].goalkeeping into r513;
    cast r504 r505 r506 r507 r508 r509 r510 r511 r512 r513 into r514 as Player;
    rand.chacha into r515 as u8;
    gt r490.attack r515 into r516;
    rand.chacha into r517 as u8;
    lt r502.defense r517 into r518;
    rand.chacha into r519 as u8;
    lt r514.goalkeeping r519 into r520;
    lt r0[10u32].speed r1[10u32].speed into r521;
    add r477 1u64 into r522;
    add r478 1u64 into r523;
    ternary r521 r522 r477 into r524;
    ternary r521 r478 r523 into r525;
    ternary r520 r524 r477 into r526;
    ternary r520 r525 r478 into r527;
    ternary r518 r526 r477 into r528;
    ternary r518 r527 r478 into r529;
    ternary r516 r528 r477 into r530;
    ternary r516 r529 r478 into r531;
    lt r0[1u32].speed r1[1u32].speed into r532;
    add r530 1u64 into r533;
    add r531 1u64 into r534;
    ternary r532 r533 r530 into r535;
    ternary r532 r531 r534 into r536;
    cast r536 r535 into r537 as GameOutcome;
    set r537 into game_outcomes[0u128];


function reveal_answer_game:
    input r0 as RevealAnswerNotification.record;
    input r1 as Answer.record;
    input r2 as puzzle_pieces_v015.aleo/JointPieceState.record;
    input r3 as puzzle_pieces_v015.aleo/ClaimSignature.record;
    input r4 as u128.private;
    input r5 as GameOutcome.private;
    assert.eq r2.state_updater_address self.signer;
    assert.eq self.caller self.signer;
    gt r5.goals_home r5.goals_away into r6;
    ternary r6 r1.challenger_address r1.opponent_address into r7;
    gt r5.goals_home r5.goals_away into r8;
    ternary r8 r1.opponent_address r1.challenger_address into r9;
    assert.eq r1.owner r1.challenger_address;
    cast r1.message_1 r1.message_2 r1.message_3 r1.message_4 r1.message_5 into r10 as Mssage;
    sign.verify r3.sig r1.challenger_address r10 into r11;
    assert.eq true r11;
    cast r1.game_multisig r1.challenger_address r1.opponent_address r1.game_multisig r1.amount r1.nonce r1.answer r3.sig 3u32 into r12 as RevealAnswer.record;
    cast aleo16hf8hfpwasnn9cf7k2c0dllc56nn7qt547qxgvgwu6pznw4trvqsx68kls r1.challenger_address r1.opponent_address r1.game_multisig r1.amount r1.nonce r1.answer r3.sig 4u32 into r13 as AuditRevealAnswer.record;
    call puzzle_pieces_v015.aleo/joint_stake_state_update r2 r3 r7 into r14 r15;
    cast r1.opponent_address r1.game_multisig 4field true r2.amount r1.challenger_address r1.opponent_address r1.answer r0.opponent_answer r7 r9 r5.goals_home r5.goals_away 9u32 into r16 as GameFinishReqNotification.record;
    cast r1.challenger_address r1.game_multisig 4field true r2.amount r1.challenger_address r1.opponent_address r1.answer r0.opponent_answer r7 r9 r5.goals_home r5.goals_away 9u32 into r17 as GameFinishReqNotification.record;
    async reveal_answer_game r4 r5 into r18;
    output r12 as RevealAnswer.record;
    output r13 as AuditRevealAnswer.record;
    output r14 as puzzle_pieces_v015.aleo/JointPieceWinner.record;
    output r15 as puzzle_pieces_v015.aleo/AuditJointPieceWinner.record;
    output r16 as GameFinishReqNotification.record;
    output r17 as GameFinishReqNotification.record;
    output r18 as football_game_v002.aleo/reveal_answer_game.future;

finalize reveal_answer_game:
    input r0 as u128.public;
    input r1 as GameOutcome.public;
    get game_outcomes[r0] into r2;
    assert.eq r1 r2;
    assert.eq r1.goals_home r2.goals_home;
    assert.eq r1.goals_away r2.goals_away;


function finish_game:
    input r0 as Game.record;
    input r1 as puzzle_pieces_v015.aleo/JointPieceWinner.record;
    input r2 as puzzle_pieces_v015.aleo/PieceJointStake.record;
    input r3 as puzzle_pieces_v015.aleo/JointPieceTimeClaim.record;
    assert.eq r0.owner self.signer;
    assert.eq self.caller self.signer;
    is.eq r1.winner r0.challenger_address into r4;
    ternary r4 r0.opponent_address r0.challenger_address into r5;
    call puzzle_pieces_v015.aleo/joint_stake_transfer_to_winner r1 r2 r3 into r6 r7 r8;
    cast r0.owner r0.challenger_commit r0.opponent_answer r0.total_pot r0.challenger_address r0.opponent_address r0.game_multisig 3field 0u32 into r9 as Game.record;
    cast r0.challenger_address r0.game_multisig 5field false r0.total_pot r0.challenger_address r0.opponent_address r1.winner r5 10u32 into r10 as GameFinishedNotification.record;
    cast r0.opponent_address r0.game_multisig 5field false r0.total_pot r0.challenger_address r0.opponent_address r1.winner r5 10u32 into r11 as GameFinishedNotification.record;
    output r6 as puzzle_pieces_v015.aleo/Piece.record;
    output r7 as puzzle_pieces_v015.aleo/AuditTransferToWinner.record;
    output r8 as puzzle_pieces_v015.aleo/AuditPieceOwner.record;
    output r9 as Game.record;
    output r10 as GameFinishedNotification.record;
    output r11 as GameFinishedNotification.record;


function finish_game_by_timeout:
    input r0 as Game.record;
    input r1 as puzzle_pieces_v015.aleo/PieceJointStake.record;
    input r2 as puzzle_pieces_v015.aleo/JointPieceTimeClaim.record;
    input r3 as signature.private;
    assert.eq r0.owner self.signer;
    assert.eq self.caller self.signer;
    cast r0.owner r0.challenger_commit r0.opponent_answer r0.total_pot r0.challenger_address r0.opponent_address r0.game_multisig 3field 0u32 into r4 as Game.record;
    cast r0.challenger_address r0.game_multisig 6field false r0.total_pot r0.challenger_address r0.opponent_address r0.opponent_address r0.challenger_address 10u32 into r5 as GameFinishedNotification.record;
    cast r0.opponent_address r0.game_multisig 6field false r0.total_pot r0.challenger_address r0.opponent_address r0.opponent_address r0.challenger_address 10u32 into r6 as GameFinishedNotification.record;
    call puzzle_pieces_v015.aleo/joint_timeout_to_opponent r1 r2 r3 into r7 r8;
    async finish_game_by_timeout r2.block_ht into r9;
    output r7 as puzzle_pieces_v015.aleo/Piece.record;
    output r8 as puzzle_pieces_v015.aleo/AuditTransferToWinner.record;
    output r4 as Game.record;
    output r5 as GameFinishedNotification.record;
    output r6 as GameFinishedNotification.record;
    output r9 as football_game_v002.aleo/finish_game_by_timeout.future;

finalize finish_game_by_timeout:
    input r0 as u32.public;
    add r0 10000u32 into r1;
    gt block.height r1 into r2;
    assert.eq r2 true;
